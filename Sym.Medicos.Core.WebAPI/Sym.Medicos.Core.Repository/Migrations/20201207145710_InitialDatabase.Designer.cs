// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sym.Medicos.Core.Repository.Context;

namespace Sym.Medicos.Core.Repository.Migrations
{
    [DbContext(typeof(SymContext))]
    [Migration("20201207145710_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Sym.Medicos.Core.Domain.Entities.Consultorio", b =>
                {
                    b.Property<int>("IdConsultorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EnderecoConsultorio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeConsultorio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelefoneConsultorio")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdConsultorio");

                    b.ToTable("Consultorios");
                });

            modelBuilder.Entity("Sym.Medicos.Core.Domain.Entities.Medico", b =>
                {
                    b.Property<int>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NomeMedico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("ValorConsulta")
                        .HasColumnType("decimal(19,2)");

                    b.HasKey("IdMedico");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Sym.Medicos.Core.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("EhAdministrador")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SobreNomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Sym.Medicos.Core.Domain.Entities.VinculoMedicoConsultorio", b =>
                {
                    b.Property<int>("IdVinculoMedicoConsultorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ConsultorioIdConsultorio")
                        .HasColumnType("int");

                    b.Property<int>("IdConsultorio")
                        .HasColumnType("int");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoIdMedico")
                        .HasColumnType("int");

                    b.HasKey("IdVinculoMedicoConsultorio");

                    b.HasIndex("ConsultorioIdConsultorio");

                    b.HasIndex("MedicoIdMedico");

                    b.ToTable("vinculoMedicoConsultorios");
                });

            modelBuilder.Entity("Sym.Medicos.Core.Domain.Entities.VinculoMedicoConsultorio", b =>
                {
                    b.HasOne("Sym.Medicos.Core.Domain.Entities.Consultorio", "Consultorio")
                        .WithMany()
                        .HasForeignKey("ConsultorioIdConsultorio");

                    b.HasOne("Sym.Medicos.Core.Domain.Entities.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoIdMedico");

                    b.Navigation("Consultorio");

                    b.Navigation("Medico");
                });
#pragma warning restore 612, 618
        }
    }
}
